#include <bits/stdc++.h>
#define MOD 1000000007
#define int long long int
using namespace std;

int32_t main() 
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int t;
    cin>>t;

    map<pair<string, string> , int> m ;



     

     
     

    while(t--)
    {

        int n ;
        cin>> n;
        vector< pair<string, string> > v(n);

        for(int i =0 ; i < n  ; i++)
        {

            string s ;
            cin>>s;
            int nn = s.size() - 1;
            string ans;

            while(s[nn]!='.')
            {
                ans+=s[nn];
                nn--;


            }

            string temp;
            for(int j = ans.size()  - 1; j>=0 ; j--)
            {
                temp+= ans[j];

            }

            v[i].first = temp;


        }
          for(int i =0 ; i < n  ; i++)
        {
            cin>>v[i].second;
            
        }
        sort(v.begin(), v.end());

       


        for(int i = 0 ; i < n ; i++)
        {
            for(int j = i + 1 ; j < n ; j++)
            {

                if(v[i].second=="dangerous" && v[j].second=="dangerous")
                {
                    if(m.find(make_pair(v[i].first, v[j].first))==m.end()) 
                    {
                         m[make_pair(v[i].first, v[j].first)] = 6;


                    }
                    else {
                        m[make_pair(v[i].first, v[j].first)] += 6;


                    }


                }
                else if(v[i].second=="normal" && v[j].second=="normal")
                {
                    if(m.find(make_pair(v[i].first, v[j].first))==m.end()) 
                    {
                         m[make_pair(v[i].first, v[j].first)] = 2;


                    }
                    else {
                        m[make_pair(v[i].first, v[j].first)] += 2;


                    }

                     

                }
                 else if(v[i].second=="signature" && v[j].second=="signature")
                {
                    if(m.find(make_pair(v[i].first, v[j].first))==m.end()) 
                    {
                         m[make_pair(v[i].first, v[j].first)] = 4;


                    }
                    else {
                        m[make_pair(v[i].first, v[j].first)] += 4;


                    }
                     

                }
                else if(v[i].second=="normal" && v[j].second=="signature")
                {
                     if(m.find(make_pair(v[i].first, v[j].first))==m.end()) 
                    {
                         m[make_pair(v[i].first, v[j].first)] = 3;


                    }
                    else {
                        m[make_pair(v[i].first, v[j].first)] += 3;


                    }

                }
                else if(v[i].second=="normal" && v[j].second=="dangerous")
                {
                     if(m.find(make_pair(v[i].first, v[j].first))==m.end()) 
                    {
                         m[make_pair(v[i].first, v[j].first)] = 4;


                    }
                    else {
                        m[make_pair(v[i].first, v[j].first)] += 4;


                    }

                }
                 else if(v[i].second=="signature" && v[j].second=="normal")
                {
                    if(m.find(make_pair(v[i].first, v[j].first))==m.end()) 
                    {
                         m[make_pair(v[i].first, v[j].first)] = 3;


                    }
                    else {
                        m[make_pair(v[i].first, v[j].first)] += 3;


                    }

                }
                 else if(v[i].second=="signature" && v[j].second=="dangerous")
                {
                    if(m.find(make_pair(v[i].first, v[j].first))==m.end()) 
                    {
                         m[make_pair(v[i].first, v[j].first)] = 5;


                    }
                    else {
                        m[make_pair(v[i].first, v[j].first)] += 5;


                    }

                }
                 else if(v[i].second=="dangerous" && v[j].second=="normal")
                {
                     if(m.find(make_pair(v[i].first, v[j].first))==m.end()) 
                    {
                         m[make_pair(v[i].first, v[j].first)] = 4;


                    }
                    else {
                        m[make_pair(v[i].first, v[j].first)] += 4;


                    }

                }
                 else if(v[i].second=="dangerous" && v[j].second=="signature")
                {
                    if(m.find(make_pair(v[i].first, v[j].first))==m.end()) 
                    {
                         m[make_pair(v[i].first, v[j].first)] = 5;


                    }
                    else {
                        m[make_pair(v[i].first, v[j].first)] += 5;


                    }

                }






            }
        }

        for(auto a : m)
        {
            cout<<a.first.first<<" "<<a.first.second<<" "<<a.second<<endl;

        }
        



        



        

   }



        

        






       
       
      

      
  

return 0;
 }
        
